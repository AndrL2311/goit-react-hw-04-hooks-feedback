{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","App.module.css","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistics","label","value","Notification","message","FeedbackOptions","options","onLeaveFeedback","controls","map","option","button","type","onClick","Section","title","children","App","bind","state","Object","keys","name","this","setState","prevState","reduce","acc","PositiveFeedback","Math","round","countTotalFeedback","container","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c75aed2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"label\":\"Statistics_label__227YU\",\"value\":\"Statistics_value__2eXJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"FeedbackOptions_controls__1Zk6z\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={s.statistics}>\n      <li className=\"item\">\n        <span className={s.label}>Good:</span>\n        <span className={s.value}>{good}</span>\n      </li>\n      <li className=\"item\">\n        <span className={s.label}>Neutral:</span>\n        <span className={s.value}>{neutral}</span>\n      </li>\n      <li className=\"item\">\n        <span className={s.label}>Bad:</span>\n        <span className={s.value}>{bad}</span>\n      </li>\n      <li className=\"item\">\n        <span className={s.label}>Total:</span>\n        <span className={s.value}>{total}</span>\n      </li>\n      <li className=\"item\">\n        <span className={s.label}>Positive Feedback:</span>\n        <span className={s.value}>{positivePercentage}%</span>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  message: PropTypes.number,\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.message}> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.controls}>\n      {options.map(option => (\n        <button\n          className={s.button}\n          key={option}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport s from './App.module.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onLeaveFeedback = this.onLeaveFeedback.bind(this);\n\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n    //Преобразуем ключи объекта в масив\n    this.options = Object.keys(this.state);\n  }\n\n  onLeaveFeedback(name) {\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  }\n  // Та же функция только через стрелку\n  // onLeaveFeedback = name => {\n  //   this.setState(prevState => {\n  //     return {\n  //       [name]: prevState[name] + 1,\n  //     };\n  //   });\n  // };\n\n  countTotalFeedback() {\n    // return this.state.good + this.state.neutral + this.state.bad;\n    return this.options.reduce((acc, option) => acc + this.state[option], 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const PositiveFeedback = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return PositiveFeedback > 0 ? PositiveFeedback : 0;\n  }\n\n  render() {\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback is given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// ============================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}